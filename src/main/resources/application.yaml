#spring.cloud.gcp.sql.database-name=[database-name]
#spring.cloud.gcp.sql.instance-connection-name=[instance-connection-name]

# So app starts despite "table already exists" errors.
#spring.datasource.continue-on-error=true
# Enforces database initialization
#spring.datasource.initialization-mode=always

# Leave empty for root, uncomment and fill out if you specified a user
#spring.datasource.username=

# Uncomment if root password is specified
#spring.datasource.password=

#spring.cloud.gcp.project-id=
#spring.cloud.gcp.credentials.location=file:/path/to/service-account.json

spring:
#  redis:
#    url: redis://10.214.199.139:6379
  cloud:
    gcp:
      spanner:
        instance-id: ${SPANNER_INSTANCE_ID}
        database: ${SPANNER_DATABASE}
      credentials:
        location: classpath:credential.json
      project-id: ${PROJECT_ID}
  datasource:
    initialization-mode: always
    continue-on-error: true
logging:
  level:
    root: INFO
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true